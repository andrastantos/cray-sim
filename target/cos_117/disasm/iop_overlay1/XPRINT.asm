@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ This gets loaded to 0x571c (0x5722)
@@ Input:
@@     OR[280]: Device desc.
@@     OR[281]: Function code
@@              1 -
@@              2 -
@@              3 -
@@              5 -
@@              6 -
@@     OR[282]: Buffer - first word is something funky, the rest should be text to be printed...
@@     OR[283]: Buffer length (for function 3)
@@
@@     OR[284]: return value
@@     OR[285]: device address

0x0000 (0x000000) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x0001 (0x000002) 0x291C-       f:00024 d: 284 | OR[284] = A                   

0x0002 (0x000004) 0x3118-       f:00030 d: 280 | A = (OR[280])                 @ Check if it is a 'PR' device
0x0003 (0x000006) 0x1E00-0x5052 f:00017 d:   0 | A = A - 20562 (0x5052)        
0x0005 (0x00000A) 0x8602-       f:00103 d:   2 | P = P + 2 (0x0007), A # 0     
0x0006 (0x00000C) 0x7004-       f:00070 d:   4 | P = P + 4 (0x000A)            
0x0007 (0x00000E) 0x1002-       f:00010 d:   2 | A = 2 (0x0002)                @ Bail with error code 2, if not
0x0008 (0x000010) 0x291C-       f:00024 d: 284 | OR[284] = A                   
0x0009 (0x000012) 0x7064-       f:00070 d: 100 | P = P + 100 (0x006D)          
0x000A (0x000014) 0x2118-       f:00020 d: 280 | A = OR[280]                   @ Check if device is opened in the current context
0x000B (0x000016) 0x1408-       f:00012 d:   8 | A = A + 8 (0x0008)            
0x000C (0x000018) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x000D (0x00001A) 0x3108-       f:00030 d: 264 | A = (OR[264])                 
0x000E (0x00001C) 0x2606-       f:00023 d:   6 | A = A - OR[6]                 
0x000F (0x00001E) 0x8602-       f:00103 d:   2 | P = P + 2 (0x0011), A # 0     
0x0010 (0x000020) 0x7004-       f:00070 d:   4 | P = P + 4 (0x0014)            
0x0011 (0x000022) 0x1002-       f:00010 d:   2 | A = 2 (0x0002)                @ Bail if device is not opened in current context
0x0012 (0x000024) 0x291C-       f:00024 d: 284 | OR[284] = A                   
0x0013 (0x000026) 0x705A-       f:00070 d:  90 | P = P + 90 (0x006D)           
@ Device context is fine
0x0014 (0x000028) 0x7E03-0x0216 f:00077 d:   3 | R = OR[3]+534 (0x0216)        @ Check for last device error code: ignore error-code 4, but exit from overlay otherwise
0x0016 (0x00002C) 0x2118-       f:00020 d: 280 | A = OR[280]                   @ Load device address into OR[285]
0x0017 (0x00002E) 0x1402-       f:00012 d:   2 | A = A + 2 (0x0002)            
0x0018 (0x000030) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x0019 (0x000032) 0x3108-       f:00030 d: 264 | A = (OR[264])                 
0x001A (0x000034) 0x291D-       f:00024 d: 285 | OR[285] = A                   
0x001B (0x000036) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                @ Disable interrupt mode and set device address
0x001C (0x000038) 0xCE0F-       f:00147 d:  15 | io 0017 (EXB), fn007           | Set interrupt mode
0x001D (0x00003A) 0x211D-       f:00020 d: 285 | A = OR[285]                   
0x001E (0x00003C) 0xCA0F-       f:00145 d:  15 | io 0017 (EXB), fn005           | Load device address

0x001F (0x00003E) 0x2118-       f:00020 d: 280 | A = OR[280]                   
0x0020 (0x000040) 0x1411-       f:00012 d:  17 | A = A + 17 (0x0011)           
0x0021 (0x000042) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x0022 (0x000044) 0x3108-       f:00030 d: 264 | A = (OR[264])                 
0x0023 (0x000046) 0x0808-       f:00004 d:   8 | A = A > 8 (0x0008)            
0x0024 (0x000048) 0x8602-       f:00103 d:   2 | P = P + 2 (0x0026), A # 0     
0x0025 (0x00004A) 0x7002-       f:00070 d:   2 | P = P + 2 (0x0027)            
0x0026 (0x00004C) 0x75AE-       f:00072 d: 430 | R = P + 430 (0x01D4)          @ Wait for device operation to complete?
@ Function code 1 or 2 handler
0x0027 (0x00004E) 0x2119-       f:00020 d: 281 | A = OR[281]                   
0x0028 (0x000050) 0x1601-       f:00013 d:   1 | A = A - 1 (0x0001)            
0x0029 (0x000052) 0x8405-       f:00102 d:   5 | P = P + 5 (0x002E), A = 0     
0x002A (0x000054) 0x2119-       f:00020 d: 281 | A = OR[281]                   
0x002B (0x000056) 0x1602-       f:00013 d:   2 | A = A - 2 (0x0002)            
0x002C (0x000058) 0x8402-       f:00102 d:   2 | P = P + 2 (0x002E), A = 0     
0x002D (0x00005A) 0x7008-       f:00070 d:   8 | P = P + 8 (0x0035)            
0x002E (0x00005C) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x002F (0x00005E) 0x291E-       f:00024 d: 286 | OR[286] = A                   
0x0030 (0x000060) 0x211D-       f:00020 d: 285 | A = OR[285]                   @ Check for Gould printers (address 017). Otherwise it's a no-op
0x0031 (0x000062) 0x160F-       f:00013 d:  15 | A = A - 15 (0x000F)           
0x0032 (0x000064) 0xBC03-0x0236 f:00136 d:   3 | R = OR[3]+566 (0x0236), A = 0 @ Call XPRINTA or XPRINTB depending on the device address OR[286]: function code to pass on to driver (0)
0x0034 (0x000068) 0x7039-       f:00070 d:  57 | P = P + 57 (0x006D)           
@ Function code 5 or 6 handler
0x0035 (0x00006A) 0x2119-       f:00020 d: 281 | A = OR[281]                   
0x0036 (0x00006C) 0x1605-       f:00013 d:   5 | A = A - 5 (0x0005)            
0x0037 (0x00006E) 0x8405-       f:00102 d:   5 | P = P + 5 (0x003C), A = 0     
0x0038 (0x000070) 0x2119-       f:00020 d: 281 | A = OR[281]                   
0x0039 (0x000072) 0x1606-       f:00013 d:   6 | A = A - 6 (0x0006)            
0x003A (0x000074) 0x8402-       f:00102 d:   2 | P = P + 2 (0x003C), A = 0     
0x003B (0x000076) 0x702A-       f:00070 d:  42 | P = P + 42 (0x0065)           
0x003C (0x000078) 0x1001-       f:00010 d:   1 | A = 1 (0x0001)                
0x003D (0x00007A) 0x291E-       f:00024 d: 286 | OR[286] = A                   
0x003E (0x00007C) 0x7E03-0x0236 f:00077 d:   3 | R = OR[3]+566 (0x0236)        @ Call XPRINTA or XPRINTB depending on the device address OR[286]: function code to pass on to driver (1)
0x0040 (0x000080) 0x2119-       f:00020 d: 281 | A = OR[281]                   @ For function 5 skip the rest
0x0041 (0x000082) 0x1606-       f:00013 d:   6 | A = A - 6 (0x0006)            
0x0042 (0x000084) 0x8402-       f:00102 d:   2 | P = P + 2 (0x0044), A = 0     
0x0043 (0x000086) 0x7021-       f:00070 d:  33 | P = P + 33 (0x0064)           
0x0044 (0x000088) 0x7E03-0x0236 f:00077 d:   3 | R = OR[3]+566 (0x0236)        @ Call XPRINTA or XPRINTB depending on the device address OR[286]: function code to pass on to driver (1) again
0x0046 (0x00008C) 0x2118-       f:00020 d: 280 | A = OR[280]                   @ Clear upper byte of desc. entry 17.
0x0047 (0x00008E) 0x1411-       f:00012 d:  17 | A = A + 17 (0x0011)           
0x0048 (0x000090) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x0049 (0x000092) 0x3108-       f:00030 d: 264 | A = (OR[264])                 
0x004A (0x000094) 0x0E01-       f:00007 d:   1 | A = A << 1 (0x0001)           
0x004B (0x000096) 0x0A08-       f:00005 d:   8 | A = A < 8 (0x0008)            
0x004C (0x000098) 0x1400-       f:00012 d:   0 | A = A + 0 (0x0000)            
0x004D (0x00009A) 0x0C09-       f:00006 d:   9 | A = A >> 9 (0x0009)           
0x004E (0x00009C) 0x3908-       f:00034 d: 264 | (OR[264]) = A                 
0x004F (0x00009E) 0x2118-       f:00020 d: 280 | A = OR[280]                   @ Clear lower byte of desc. entry 17: number of interrupts received
0x0050 (0x0000A0) 0x1411-       f:00012 d:  17 | A = A + 17 (0x0011)           
0x0051 (0x0000A2) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x0052 (0x0000A4) 0x3108-       f:00030 d: 264 | A = (OR[264])                 
0x0053 (0x0000A6) 0x1A00-0xFF00 f:00015 d:   0 | A = A & 65280 (0xFF00)        
0x0055 (0x0000AA) 0x3908-       f:00034 d: 264 | (OR[264]) = A                 
0x0056 (0x0000AC) 0x2118-       f:00020 d: 280 | A = OR[280]                   @ Clear desc. entry 19.
0x0057 (0x0000AE) 0x1413-       f:00012 d:  19 | A = A + 19 (0x0013)           
0x0058 (0x0000B0) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x0059 (0x0000B2) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x005A (0x0000B4) 0x3908-       f:00034 d: 264 | (OR[264]) = A                 
0x005B (0x0000B6) 0x2118-       f:00020 d: 280 | A = OR[280]                   @ Clear upper byte of desc. entry 20.
0x005C (0x0000B8) 0x1414-       f:00012 d:  20 | A = A + 20 (0x0014)           
0x005D (0x0000BA) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x005E (0x0000BC) 0x3108-       f:00030 d: 264 | A = (OR[264])                 
0x005F (0x0000BE) 0x0E01-       f:00007 d:   1 | A = A << 1 (0x0001)           
0x0060 (0x0000C0) 0x0A08-       f:00005 d:   8 | A = A < 8 (0x0008)            
0x0061 (0x0000C2) 0x1400-       f:00012 d:   0 | A = A + 0 (0x0000)            
0x0062 (0x0000C4) 0x0C09-       f:00006 d:   9 | A = A >> 9 (0x0009)           
0x0063 (0x0000C6) 0x3908-       f:00034 d: 264 | (OR[264]) = A                 
0x0064 (0x0000C8) 0x7009-       f:00070 d:   9 | P = P + 9 (0x006D)            
@ Function code 3 handler
0x0065 (0x0000CA) 0x2119-       f:00020 d: 281 | A = OR[281]                   
0x0066 (0x0000CC) 0x1603-       f:00013 d:   3 | A = A - 3 (0x0003)            
0x0067 (0x0000CE) 0x8402-       f:00102 d:   2 | P = P + 2 (0x0069), A = 0     
0x0068 (0x0000D0) 0x7003-       f:00070 d:   3 | P = P + 3 (0x006B)            
0x0069 (0x0000D2) 0x7411-       f:00072 d:  17 | R = P + 17 (0x007A)           
0x006A (0x0000D4) 0x7003-       f:00070 d:   3 | P = P + 3 (0x006D)            
0x006B (0x0000D6) 0x7C34-       f:00076 d:  52 | R = OR[52]                    
0x006C (0x0000D8) 0x0000-       f:00000 d:   0 | PASS                          

@ Enable device interrupts, set return value from OR[284] and return from overlay
0x006D (0x0000DA) 0x1002-       f:00010 d:   2 | A = 2 (0x0002)                
0x006E (0x0000DC) 0xCE0F-       f:00147 d:  15 | io 0017 (EXB), fn007           | Set interrupt mode
0x006F (0x0000DE) 0x2005-       f:00020 d:   5 | A = OR[5]                     
0x0070 (0x0000E0) 0x1406-       f:00012 d:   6 | A = A + 6 (0x0006)            
0x0071 (0x0000E2) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x0072 (0x0000E4) 0x211C-       f:00020 d: 284 | A = OR[284]                   
0x0073 (0x0000E6) 0x3908-       f:00034 d: 264 | (OR[264]) = A                 
0x0074 (0x0000E8) 0x102A-       f:00010 d:  42 | A = 42 (0x002A)               
0x0075 (0x0000EA) 0x2924-       f:00024 d: 292 | OR[292] = A                   
0x0076 (0x0000EC) 0x1124-       f:00010 d: 292 | A = 292 (0x0124)              
0x0077 (0x0000EE) 0x5800-       f:00054 d:   0 | B = A                         
0x0078 (0x0000F0) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x0079 (0x0000F2) 0x7C09-       f:00076 d:   9 | R = OR[9]                     

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ Main code for function 3 handler
0x007A (0x0000F4) 0x2118-       f:00020 d: 280 | A = OR[280]                   @ Check desc. entry 12 and see if its the string 'PT'
0x007B (0x0000F6) 0x140C-       f:00012 d:  12 | A = A + 12 (0x000C)           
0x007C (0x0000F8) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x007D (0x0000FA) 0x3108-       f:00030 d: 264 | A = (OR[264])                 
0x007E (0x0000FC) 0x291F-       f:00024 d: 287 | OR[287] = A                   
0x007F (0x0000FE) 0x211F-       f:00020 d: 287 | A = OR[287]                   
0x0080 (0x000100) 0x1E00-0x5054 f:00017 d:   0 | A = A - 20564 (0x5054)        
0x0082 (0x000104) 0x8402-       f:00102 d:   2 | P = P + 2 (0x0084), A = 0     
0x0083 (0x000106) 0x700E-       f:00070 d:  14 | P = P + 14 (0x0091)           
@ Desc. entry 12 is 'PT': clear buffer at 0x2fd4 to 0-s
0x0084 (0x000108) 0x1800-0x2FD4 f:00014 d:   0 | A = 12244 (0x2FD4)            
0x0086 (0x00010C) 0x290E-       f:00024 d: 270 | OR[270] = A                   
0x0087 (0x00010E) 0x1042-       f:00010 d:  66 | A = 66 (0x0042)               
0x0088 (0x000110) 0x290D-       f:00024 d: 269 | OR[269] = A                   
0x0089 (0x000112) 0x210D-       f:00020 d: 269 | A = OR[269]                   
0x008A (0x000114) 0x8406-       f:00102 d:   6 | P = P + 6 (0x0090), A = 0     
0x008B (0x000116) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x008C (0x000118) 0x390E-       f:00034 d: 270 | (OR[270]) = A                 
0x008D (0x00011A) 0x2F0D-       f:00027 d: 269 | OR[269] = OR[269] - 1         
0x008E (0x00011C) 0x2D0E-       f:00026 d: 270 | OR[270] = OR[270] + 1         
0x008F (0x00011E) 0x7206-       f:00071 d:   6 | P = P - 6 (0x0089)            
0x0090 (0x000120) 0x700E-       f:00070 d:  14 | P = P + 14 (0x009E)           
@ Desc. entry 12 is not 'PT': clear buffer at 0x2fd4 to spaces
0x0091 (0x000122) 0x1800-0x2FD4 f:00014 d:   0 | A = 12244 (0x2FD4)            
0x0093 (0x000126) 0x290E-       f:00024 d: 270 | OR[270] = A                   
0x0094 (0x000128) 0x1042-       f:00010 d:  66 | A = 66 (0x0042)               
0x0095 (0x00012A) 0x290D-       f:00024 d: 269 | OR[269] = A                   
0x0096 (0x00012C) 0x210D-       f:00020 d: 269 | A = OR[269]                   
0x0097 (0x00012E) 0x8407-       f:00102 d:   7 | P = P + 7 (0x009E), A = 0     
0x0098 (0x000130) 0x1800-0x2020 f:00014 d:   0 | A = 8224 (0x2020)             
0x009A (0x000134) 0x390E-       f:00034 d: 270 | (OR[270]) = A                 
0x009B (0x000136) 0x2F0D-       f:00027 d: 269 | OR[269] = OR[269] - 1         
0x009C (0x000138) 0x2D0E-       f:00026 d: 270 | OR[270] = OR[270] + 1         
0x009D (0x00013A) 0x7207-       f:00071 d:   7 | P = P - 7 (0x0096)            

0x009E (0x00013C) 0x211B-       f:00020 d: 283 | A = OR[283]                   @ Check the size of the buffer, overwrite it to 66, if it's longer
0x009F (0x00013E) 0x1642-       f:00013 d:  66 | A = A - 66 (0x0042)           
0x00A0 (0x000140) 0x8003-       f:00100 d:   3 | P = P + 3 (0x00A3), C = 0     
0x00A1 (0x000142) 0x8402-       f:00102 d:   2 | P = P + 2 (0x00A3), A = 0     
0x00A2 (0x000144) 0x7002-       f:00070 d:   2 | P = P + 2 (0x00A4)            
0x00A3 (0x000146) 0x7003-       f:00070 d:   3 | P = P + 3 (0x00A6)            
0x00A4 (0x000148) 0x1042-       f:00010 d:  66 | A = 66 (0x0042)               
0x00A5 (0x00014A) 0x291B-       f:00024 d: 283 | OR[283] = A                   
0x00A6 (0x00014C) 0x211D-       f:00020 d: 285 | A = OR[285]                   @ Check for Versatec printer
0x00A7 (0x00014E) 0x160D-       f:00013 d:  13 | A = A - 13 (0x000D)           
0x00A8 (0x000150) 0x8402-       f:00102 d:   2 | P = P + 2 (0x00AA), A = 0     
0x00A9 (0x000152) 0x7041-       f:00070 d:  65 | P = P + 65 (0x00EA)           
@ Versatec printer code
0x00AA (0x000154) 0x211F-       f:00020 d: 287 | A = OR[287]                   
0x00AB (0x000156) 0x8402-       f:00102 d:   2 | P = P + 2 (0x00AD), A = 0     
0x00AC (0x000158) 0x703E-       f:00070 d:  62 | P = P + 62 (0x00EA)           
0x00AD (0x00015A) 0x211A-       f:00020 d: 282 | A = OR[282]                   
0x00AE (0x00015C) 0x1401-       f:00012 d:   1 | A = A + 1 (0x0001)            
0x00AF (0x00015E) 0x2913-       f:00024 d: 275 | OR[275] = A                   
0x00B0 (0x000160) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x00B1 (0x000162) 0x2914-       f:00024 d: 276 | OR[276] = A                   
0x00B2 (0x000164) 0x211B-       f:00020 d: 283 | A = OR[283]                   
0x00B3 (0x000166) 0x0A01-       f:00005 d:   1 | A = A < 1 (0x0001)            
0x00B4 (0x000168) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x00B5 (0x00016A) 0x2114-       f:00020 d: 276 | A = OR[276]                   
0x00B6 (0x00016C) 0x2708-       f:00023 d: 264 | A = A - OR[264]               
0x00B7 (0x00016E) 0x8433-       f:00102 d:  51 | P = P + 51 (0x00EA), A = 0    
0x00B8 (0x000170) 0x2114-       f:00020 d: 276 | A = OR[276]                   
0x00B9 (0x000172) 0x0801-       f:00004 d:   1 | A = A > 1 (0x0001)            
0x00BA (0x000174) 0x2513-       f:00022 d: 275 | A = A + OR[275]               
0x00BB (0x000176) 0x290D-       f:00024 d: 269 | OR[269] = A                   
0x00BC (0x000178) 0x310D-       f:00030 d: 269 | A = (OR[269])                 
0x00BD (0x00017A) 0x290D-       f:00024 d: 269 | OR[269] = A                   
0x00BE (0x00017C) 0x2114-       f:00020 d: 276 | A = OR[276]                   
0x00BF (0x00017E) 0x1201-       f:00011 d:   1 | A = A & 1 (0x0001)            
0x00C0 (0x000180) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x00C1 (0x000182) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x00C2 (0x000184) 0x2708-       f:00023 d: 264 | A = A - OR[264]               
0x00C3 (0x000186) 0x8604-       f:00103 d:   4 | P = P + 4 (0x00C7), A # 0     
0x00C4 (0x000188) 0x210D-       f:00020 d: 269 | A = OR[269]                   
0x00C5 (0x00018A) 0x0808-       f:00004 d:   8 | A = A > 8 (0x0008)            
0x00C6 (0x00018C) 0x290D-       f:00024 d: 269 | OR[269] = A                   
0x00C7 (0x00018E) 0x210D-       f:00020 d: 269 | A = OR[269]                   
0x00C8 (0x000190) 0x12FF-       f:00011 d: 255 | A = A & 255 (0x00FF)          
0x00C9 (0x000192) 0x2915-       f:00024 d: 277 | OR[277] = A                   
0x00CA (0x000194) 0x2115-       f:00020 d: 277 | A = OR[277]                   
0x00CB (0x000196) 0x1620-       f:00013 d:  32 | A = A - 32 (0x0020)           
0x00CC (0x000198) 0x8002-       f:00100 d:   2 | P = P + 2 (0x00CE), C = 0     
0x00CD (0x00019A) 0x701B-       f:00070 d:  27 | P = P + 27 (0x00E8)           
0x00CE (0x00019C) 0x1020-       f:00010 d:  32 | A = 32 (0x0020)               
0x00CF (0x00019E) 0x2915-       f:00024 d: 277 | OR[277] = A                   
0x00D0 (0x0001A0) 0x2115-       f:00020 d: 277 | A = OR[277]                   
0x00D1 (0x0001A2) 0x12FF-       f:00011 d: 255 | A = A & 255 (0x00FF)          
0x00D2 (0x0001A4) 0x290D-       f:00024 d: 269 | OR[269] = A                   
0x00D3 (0x0001A6) 0x2114-       f:00020 d: 276 | A = OR[276]                   
0x00D4 (0x0001A8) 0x0801-       f:00004 d:   1 | A = A > 1 (0x0001)            
0x00D5 (0x0001AA) 0x2513-       f:00022 d: 275 | A = A + OR[275]               
0x00D6 (0x0001AC) 0x290E-       f:00024 d: 270 | OR[270] = A                   
0x00D7 (0x0001AE) 0x2114-       f:00020 d: 276 | A = OR[276]                   
0x00D8 (0x0001B0) 0x1201-       f:00011 d:   1 | A = A & 1 (0x0001)            
0x00D9 (0x0001B2) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x00DA (0x0001B4) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x00DB (0x0001B6) 0x2708-       f:00023 d: 264 | A = A - OR[264]               
0x00DC (0x0001B8) 0x8607-       f:00103 d:   7 | P = P + 7 (0x00E3), A # 0     
0x00DD (0x0001BA) 0x310E-       f:00030 d: 270 | A = (OR[270])                 
0x00DE (0x0001BC) 0x0A09-       f:00005 d:   9 | A = A < 9 (0x0009)            
0x00DF (0x0001BE) 0x250D-       f:00022 d: 269 | A = A + OR[269]               
0x00E0 (0x0001C0) 0x0C09-       f:00006 d:   9 | A = A >> 9 (0x0009)           
0x00E1 (0x0001C2) 0x390E-       f:00034 d: 270 | (OR[270]) = A                 
0x00E2 (0x0001C4) 0x7006-       f:00070 d:   6 | P = P + 6 (0x00E8)            
0x00E3 (0x0001C6) 0x310E-       f:00030 d: 270 | A = (OR[270])                 
0x00E4 (0x0001C8) 0x1A00-0xFF00 f:00015 d:   0 | A = A & 65280 (0xFF00)        
0x00E6 (0x0001CC) 0x250D-       f:00022 d: 269 | A = A + OR[269]               
0x00E7 (0x0001CE) 0x390E-       f:00034 d: 270 | (OR[270]) = A                 
0x00E8 (0x0001D0) 0x2D14-       f:00026 d: 276 | OR[276] = OR[276] + 1         
0x00E9 (0x0001D2) 0x7237-       f:00071 d:  55 | P = P - 55 (0x00B2)           
@ Non-Versatec printer code
0x00EA (0x0001D4) 0x311A-       f:00030 d: 282 | A = (OR[282])                 
0x00EB (0x0001D6) 0x2920-       f:00024 d: 288 | OR[288] = A                   
0x00EC (0x0001D8) 0x211F-       f:00020 d: 287 | A = OR[287]                   
0x00ED (0x0001DA) 0x1E00-0x5054 f:00017 d:   0 | A = A - 20564 (0x5054)        
0x00EF (0x0001DE) 0x8402-       f:00102 d:   2 | P = P + 2 (0x00F1), A = 0     
0x00F0 (0x0001E0) 0x7013-       f:00070 d:  19 | P = P + 19 (0x0103)           
@ 'PT' mode
0x00F1 (0x0001E2) 0x2120-       f:00020 d: 288 | A = OR[288]                   
0x00F2 (0x0001E4) 0x1633-       f:00013 d:  51 | A = A - 51 (0x0033)           
0x00F3 (0x0001E6) 0x8402-       f:00102 d:   2 | P = P + 2 (0x00F5), A = 0     
0x00F4 (0x0001E8) 0x700C-       f:00070 d:  12 | P = P + 12 (0x0100)           
0x00F5 (0x0001EA) 0x211D-       f:00020 d: 285 | A = OR[285]                   
0x00F6 (0x0001EC) 0x160F-       f:00013 d:  15 | A = A - 15 (0x000F)           
0x00F7 (0x0001EE) 0x8402-       f:00102 d:   2 | P = P + 2 (0x00F9), A = 0     
0x00F8 (0x0001F0) 0x7008-       f:00070 d:   8 | P = P + 8 (0x0100)            
0x00F9 (0x0001F2) 0x1005-       f:00010 d:   5 | A = 5 (0x0005)                
0x00FA (0x0001F4) 0xD80F-       f:00154 d:  15 | io 0017 (EXB), fn014           | Data output to A register (DOA)
0x00FB (0x0001F6) 0x74CC-       f:00072 d: 204 | R = P + 204 (0x01C7)          @ Wait for busy to clear
0x00FC (0x0001F8) 0x1004-       f:00010 d:   4 | A = 4 (0x0004)                
0x00FD (0x0001FA) 0xDE0F-       f:00157 d:  15 | io 0017 (EXB), fn017           | Send control
0x00FE (0x0001FC) 0x74C9-       f:00072 d: 201 | R = P + 201 (0x01C7)          @ Wait for busy to clear
0x00FF (0x0001FE) 0x7003-       f:00070 d:   3 | P = P + 3 (0x0102)            
0x0100 (0x000200) 0x1032-       f:00010 d:  50 | A = 50 (0x0032)               
0x0101 (0x000202) 0x2920-       f:00024 d: 288 | OR[288] = A                   
0x0102 (0x000204) 0x7022-       f:00070 d:  34 | P = P + 34 (0x0124)           
@ non-'PT' mode
0x0103 (0x000206) 0x211F-       f:00020 d: 287 | A = OR[287]                   
0x0104 (0x000208) 0x8402-       f:00102 d:   2 | P = P + 2 (0x0106), A = 0     
0x0105 (0x00020A) 0x701D-       f:00070 d:  29 | P = P + 29 (0x0122)           
0x0106 (0x00020C) 0x1001-       f:00010 d:   1 | A = 1 (0x0001)                @ Call XPRINTA/B function 1
0x0107 (0x00020E) 0x291E-       f:00024 d: 286 | OR[286] = A                   
0x0108 (0x000210) 0x2118-       f:00020 d: 280 | A = OR[280]                   
0x0109 (0x000212) 0x1413-       f:00012 d:  19 | A = A + 19 (0x0013)           
0x010A (0x000214) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x010B (0x000216) 0x3108-       f:00030 d: 264 | A = (OR[264])                 
0x010C (0x000218) 0x2921-       f:00024 d: 289 | OR[289] = A                   
0x010D (0x00021A) 0x2121-       f:00020 d: 289 | A = OR[289]                   
0x010E (0x00021C) 0x1630-       f:00013 d:  48 | A = A - 48 (0x0030)           
0x010F (0x00021E) 0x8202-       f:00101 d:   2 | P = P + 2 (0x0111), C = 1     
0x0110 (0x000220) 0x7008-       f:00070 d:   8 | P = P + 8 (0x0118)            
0x0111 (0x000222) 0x211D-       f:00020 d: 285 | A = OR[285]                   
0x0112 (0x000224) 0x160F-       f:00013 d:  15 | A = A - 15 (0x000F)           
0x0113 (0x000226) 0x8402-       f:00102 d:   2 | P = P + 2 (0x0115), A = 0     
0x0114 (0x000228) 0x7004-       f:00070 d:   4 | P = P + 4 (0x0118)            
0x0115 (0x00022A) 0x7E03-0x0236 f:00077 d:   3 | R = OR[3]+566 (0x0236)        @ Call XPRINTA or XPRINTB depending on the device address OR[286]: function code to pass on to driver
0x0117 (0x00022E) 0x700A-       f:00070 d:  10 | P = P + 10 (0x0121)           
0x0118 (0x000230) 0x2120-       f:00020 d: 288 | A = OR[288]                   
0x0119 (0x000232) 0x1631-       f:00013 d:  49 | A = A - 49 (0x0031)           
0x011A (0x000234) 0x8402-       f:00102 d:   2 | P = P + 2 (0x011C), A = 0     
0x011B (0x000236) 0x7006-       f:00070 d:   6 | P = P + 6 (0x0121)            
0x011C (0x000238) 0x7E03-0x0236 f:00077 d:   3 | R = OR[3]+566 (0x0236)        @ Call XPRINTA or XPRINTB depending on the device address OR[286]: function code to pass on to driver
0x011E (0x00023C) 0x211B-       f:00020 d: 283 | A = OR[283]                   
0x011F (0x00023E) 0x8602-       f:00103 d:   2 | P = P + 2 (0x0121), A # 0     
0x0120 (0x000240) 0x0200-       f:00001 d:   0 | EXIT                          
0x0121 (0x000242) 0x7003-       f:00070 d:   3 | P = P + 3 (0x0124)            
0x0122 (0x000244) 0x7C34-       f:00076 d:  52 | R = OR[52]                    
0x0123 (0x000246) 0x0000-       f:00000 d:   0 | PASS                          
@ We're done checking some (maybe printer-specific) parameters, and we're OK to go
0x0124 (0x000248) 0x2120-       f:00020 d: 288 | A = OR[288]                   
0x0125 (0x00024A) 0x1630-       f:00013 d:  48 | A = A - 48 (0x0030)           
0x0126 (0x00024C) 0x8402-       f:00102 d:   2 | P = P + 2 (0x0128), A = 0     
0x0127 (0x00024E) 0x7003-       f:00070 d:   3 | P = P + 3 (0x012A)            
0x0128 (0x000250) 0x745F-       f:00072 d:  95 | R = P + 95 (0x0187)           
0x0129 (0x000252) 0x74AB-       f:00072 d: 171 | R = P + 171 (0x01D4)          @ Wait for device operation to complete?
0x012A (0x000254) 0x211B-       f:00020 d: 283 | A = OR[283]                   
0x012B (0x000256) 0x8602-       f:00103 d:   2 | P = P + 2 (0x012D), A # 0     
0x012C (0x000258) 0x7011-       f:00070 d:  17 | P = P + 17 (0x013D)           
@ Copy buffer over from OR[282] to static buffer at 0x2FD4
0x012D (0x00025A) 0x211A-       f:00020 d: 282 | A = OR[282]                   
0x012E (0x00025C) 0x1401-       f:00012 d:   1 | A = A + 1 (0x0001)            
0x012F (0x00025E) 0x290D-       f:00024 d: 269 | OR[269] = A                   
0x0130 (0x000260) 0x1800-0x2FD4 f:00014 d:   0 | A = 12244 (0x2FD4)            
0x0132 (0x000264) 0x290E-       f:00024 d: 270 | OR[270] = A                   
0x0133 (0x000266) 0x211B-       f:00020 d: 283 | A = OR[283]                   
0x0134 (0x000268) 0x290F-       f:00024 d: 271 | OR[271] = A                   
0x0135 (0x00026A) 0x7006-       f:00070 d:   6 | P = P + 6 (0x013B)            
0x0136 (0x00026C) 0x310D-       f:00030 d: 269 | A = (OR[269])                 
0x0137 (0x00026E) 0x390E-       f:00034 d: 270 | (OR[270]) = A                 
0x0138 (0x000270) 0x2D0D-       f:00026 d: 269 | OR[269] = OR[269] + 1         
0x0139 (0x000272) 0x2D0E-       f:00026 d: 270 | OR[270] = OR[270] + 1         
0x013A (0x000274) 0x2F0F-       f:00027 d: 271 | OR[271] = OR[271] - 1         
0x013B (0x000276) 0x210F-       f:00020 d: 271 | A = OR[271]                   
0x013C (0x000278) 0x8E06-       f:00107 d:   6 | P = P - 6 (0x0136), A # 0     
0x013D (0x00027A) 0x744A-       f:00072 d:  74 | R = P + 74 (0x0187)           
0x013E (0x00027C) 0x0200-       f:00001 d:   0 | EXIT                          



0x013F (0x00027E) 0x7E03-0x0231 f:00077 d:   3 | R = OR[3]+561 (0x0231)        @ Get RegA from device in OR[290]
0x0141 (0x000282) 0x2122-       f:00020 d: 290 | A = OR[290]                   
0x0142 (0x000284) 0x1A00-0x8000 f:00015 d:   0 | A = A & 32768 (0x8000)        
0x0144 (0x000288) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x0145 (0x00028A) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x0146 (0x00028C) 0x2708-       f:00023 d: 264 | A = A - OR[264]               
0x0147 (0x00028E) 0x8602-       f:00103 d:   2 | P = P + 2 (0x0149), A # 0     
0x0148 (0x000290) 0x700A-       f:00070 d:  10 | P = P + 10 (0x0152)           
0x0149 (0x000292) 0x211D-       f:00020 d: 285 | A = OR[285]                   
0x014A (0x000294) 0x160F-       f:00013 d:  15 | A = A - 15 (0x000F)           
0x014B (0x000296) 0x8402-       f:00102 d:   2 | P = P + 2 (0x014D), A = 0     
0x014C (0x000298) 0x7006-       f:00070 d:   6 | P = P + 6 (0x0152)            
0x014D (0x00029A) 0x1002-       f:00010 d:   2 | A = 2 (0x0002)                
0x014E (0x00029C) 0x291E-       f:00024 d: 286 | OR[286] = A                   
0x014F (0x00029E) 0x7E03-0x0236 f:00077 d:   3 | R = OR[3]+566 (0x0236)        @ Call XPRINTA or XPRINTB depending on the device address OR[286]: function code to pass on to driver
0x0151 (0x0002A2) 0x7010-       f:00070 d:  16 | P = P + 16 (0x0161)           
0x0152 (0x0002A4) 0x2122-       f:00020 d: 290 | A = OR[290]                   
0x0153 (0x0002A6) 0x1201-       f:00011 d:   1 | A = A & 1 (0x0001)            
0x0154 (0x0002A8) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x0155 (0x0002AA) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x0156 (0x0002AC) 0x2708-       f:00023 d: 264 | A = A - OR[264]               
0x0157 (0x0002AE) 0x8402-       f:00102 d:   2 | P = P + 2 (0x0159), A = 0     
0x0158 (0x0002B0) 0x7009-       f:00070 d:   9 | P = P + 9 (0x0161)            
0x0159 (0x0002B2) 0x211D-       f:00020 d: 285 | A = OR[285]                   
0x015A (0x0002B4) 0x160D-       f:00013 d:  13 | A = A - 13 (0x000D)           
0x015B (0x0002B6) 0x8402-       f:00102 d:   2 | P = P + 2 (0x015D), A = 0     
0x015C (0x0002B8) 0x7005-       f:00070 d:   5 | P = P + 5 (0x0161)            
0x015D (0x0002BA) 0x1002-       f:00010 d:   2 | A = 2 (0x0002)                
0x015E (0x0002BC) 0x291E-       f:00024 d: 286 | OR[286] = A                   
0x015F (0x0002BE) 0x7E03-0x0236 f:00077 d:   3 | R = OR[3]+566 (0x0236)        @ Call XPRINTA or XPRINTB depending on the device address OR[286]: function code to pass on to driver
0x0161 (0x0002C2) 0x211D-       f:00020 d: 285 | A = OR[285]                   
0x0162 (0x0002C4) 0x160F-       f:00013 d:  15 | A = A - 15 (0x000F)           
0x0163 (0x0002C6) 0x8402-       f:00102 d:   2 | P = P + 2 (0x0165), A = 0     
0x0164 (0x0002C8) 0x701A-       f:00070 d:  26 | P = P + 26 (0x017E)           
0x0165 (0x0002CA) 0x7E03-0x0231 f:00077 d:   3 | R = OR[3]+561 (0x0231)        @ Get RegA from device in OR[290]
0x0167 (0x0002CE) 0x2122-       f:00020 d: 290 | A = OR[290]                   
0x0168 (0x0002D0) 0x1300-       f:00011 d: 256 | A = A & 256 (0x0100)          
0x0169 (0x0002D2) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x016A (0x0002D4) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x016B (0x0002D6) 0x2708-       f:00023 d: 264 | A = A - OR[264]               
0x016C (0x0002D8) 0x8402-       f:00102 d:   2 | P = P + 2 (0x016E), A = 0     
0x016D (0x0002DA) 0x7005-       f:00070 d:   5 | P = P + 5 (0x0172)            
0x016E (0x0002DC) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x016F (0x0002DE) 0x291E-       f:00024 d: 286 | OR[286] = A                   
0x0170 (0x0002E0) 0x7E03-0x0236 f:00077 d:   3 | R = OR[3]+566 (0x0236)        @ Call XPRINTA or XPRINTB depending on the device address OR[286]: function code to pass on to driver
0x0172 (0x0002E4) 0x7E03-0x0231 f:00077 d:   3 | R = OR[3]+561 (0x0231)        @ Get RegA from device in OR[290]
0x0174 (0x0002E8) 0x2122-       f:00020 d: 290 | A = OR[290]                   @ This is at 0x5896
0x0175 (0x0002EA) 0x1A00-0x4000 f:00015 d:   0 | A = A & 16384 (0x4000)        
0x0177 (0x0002EE) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x0178 (0x0002F0) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x0179 (0x0002F2) 0x2708-       f:00023 d: 264 | A = A - OR[264]               
0x017A (0x0002F4) 0x8402-       f:00102 d:   2 | P = P + 2 (0x017C), A = 0     
0x017B (0x0002F6) 0x7002-       f:00070 d:   2 | P = P + 2 (0x017D)            
0x017C (0x0002F8) 0x7458-       f:00072 d:  88 | R = P + 88 (0x01D4)           @ Wait for device operation to complete?
0x017D (0x0002FA) 0x7009-       f:00070 d:   9 | P = P + 9 (0x0186)            
0x017E (0x0002FC) 0x2118-       f:00020 d: 280 | A = OR[280]                   
0x017F (0x0002FE) 0x1411-       f:00012 d:  17 | A = A + 17 (0x0011)           
0x0180 (0x000300) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x0181 (0x000302) 0x3108-       f:00030 d: 264 | A = (OR[264])                 
0x0182 (0x000304) 0x0808-       f:00004 d:   8 | A = A > 8 (0x0008)            
0x0183 (0x000306) 0x8602-       f:00103 d:   2 | P = P + 2 (0x0185), A # 0     
0x0184 (0x000308) 0x7002-       f:00070 d:   2 | P = P + 2 (0x0186)            
0x0185 (0x00030A) 0x744F-       f:00072 d:  79 | R = P + 79 (0x01D4)           @ Wait for device operation to complete?
0x0186 (0x00030C) 0x0200-       f:00001 d:   0 | EXIT                          



0x0187 (0x00030E) 0x7648-       f:00073 d:  72 | R = P - 72 (0x013F)           
0x0188 (0x000310) 0x211D-       f:00020 d: 285 | A = OR[285]                   
0x0189 (0x000312) 0x160F-       f:00013 d:  15 | A = A - 15 (0x000F)           
0x018A (0x000314) 0x8402-       f:00102 d:   2 | P = P + 2 (0x018C), A = 0     
0x018B (0x000316) 0x700A-       f:00070 d:  10 | P = P + 10 (0x0195)           
@ One type of print command: - number of words in RegB, buffer address in RegC
0x018C (0x000318) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x018D (0x00031A) 0x1642-       f:00013 d:  66 | A = A - 66 (0x0042)           
0x018E (0x00031C) 0xDA0F-       f:00155 d:  15 | io 0017 (EXB), fn015           | Data output to B register (DOB)
0x018F (0x00031E) 0x7438-       f:00072 d:  56 | R = P + 56 (0x01C7)           @ Wait for busy to clear
0x0190 (0x000320) 0x1800-0x2FD4 f:00014 d:   0 | A = 12244 (0x2FD4)            
0x0192 (0x000324) 0xDC0F-       f:00156 d:  15 | io 0017 (EXB), fn016           | Data output to C register (DOC)
0x0193 (0x000326) 0x7434-       f:00072 d:  52 | R = P + 52 (0x01C7)           @ Wait for busy to clear
0x0194 (0x000328) 0x7024-       f:00070 d:  36 | P = P + 36 (0x01B8)           
@ Other type of print command: - buffer address (in BYTES!!!) in RegB, buffer length (in BYTES!!!!) in RegC
0x0195 (0x00032A) 0x1800-0x2FD4 f:00014 d:   0 | A = 12244 (0x2FD4)            
0x0197 (0x00032E) 0x0A01-       f:00005 d:   1 | A = A < 1 (0x0001)            
0x0198 (0x000330) 0x2913-       f:00024 d: 275 | OR[275] = A                   
0x0199 (0x000332) 0x2113-       f:00020 d: 275 | A = OR[275]                   
0x019A (0x000334) 0xDA0F-       f:00155 d:  15 | io 0017 (EXB), fn015           | Data output to B register (DOB)
0x019B (0x000336) 0x742C-       f:00072 d:  44 | R = P + 44 (0x01C7)           @ Wait for busy to clear
0x019C (0x000338) 0x211F-       f:00020 d: 287 | A = OR[287]                   
0x019D (0x00033A) 0x1E00-0x5054 f:00017 d:   0 | A = A - 20564 (0x5054)        
0x019F (0x00033E) 0x8402-       f:00102 d:   2 | P = P + 2 (0x01A1), A = 0     
0x01A0 (0x000340) 0x7005-       f:00070 d:   5 | P = P + 5 (0x01A5)            
0x01A1 (0x000342) 0x211B-       f:00020 d: 283 | A = OR[283]                   
0x01A2 (0x000344) 0x0A01-       f:00005 d:   1 | A = A < 1 (0x0001)            
0x01A3 (0x000346) 0x2913-       f:00024 d: 275 | OR[275] = A                   
0x01A4 (0x000348) 0x7004-       f:00070 d:   4 | P = P + 4 (0x01A8)            
0x01A5 (0x00034A) 0x1042-       f:00010 d:  66 | A = 66 (0x0042)               
0x01A6 (0x00034C) 0x0A01-       f:00005 d:   1 | A = A < 1 (0x0001)            
0x01A7 (0x00034E) 0x2913-       f:00024 d: 275 | OR[275] = A                   
0x01A8 (0x000350) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x01A9 (0x000352) 0x2713-       f:00023 d: 275 | A = A - OR[275]               
0x01AA (0x000354) 0xDC0F-       f:00156 d:  15 | io 0017 (EXB), fn016           | Data output to C register (DOC)
0x01AB (0x000356) 0x741C-       f:00072 d:  28 | R = P + 28 (0x01C7)           @ Wait for busy to clear
0x01AC (0x000358) 0x211F-       f:00020 d: 287 | A = OR[287]                   
0x01AD (0x00035A) 0x1E00-0x5054 f:00017 d:   0 | A = A - 20564 (0x5054)        
0x01AF (0x00035E) 0x8402-       f:00102 d:   2 | P = P + 2 (0x01B1), A = 0     
0x01B0 (0x000360) 0x7005-       f:00070 d:   5 | P = P + 5 (0x01B5)            
0x01B1 (0x000362) 0x1004-       f:00010 d:   4 | A = 4 (0x0004)                
0x01B2 (0x000364) 0xDE0F-       f:00157 d:  15 | io 0017 (EXB), fn017           | Send control
0x01B3 (0x000366) 0x7414-       f:00072 d:  20 | R = P + 20 (0x01C7)           @ Wait for busy to clear
0x01B4 (0x000368) 0x7004-       f:00070 d:   4 | P = P + 4 (0x01B8)            
0x01B5 (0x00036A) 0x1001-       f:00010 d:   1 | A = 1 (0x0001)                
0x01B6 (0x00036C) 0xDE0F-       f:00157 d:  15 | io 0017 (EXB), fn017           | Send control
0x01B7 (0x00036E) 0x7410-       f:00072 d:  16 | R = P + 16 (0x01C7)           @ Wait for busy to clear
@ Common part
0x01B8 (0x000370) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x01B9 (0x000372) 0xCC0F-       f:00146 d:  15 | io 0017 (EXB), fn006           | Send interface mask (MSKO)
0x01BA (0x000374) 0x2118-       f:00020 d: 280 | A = OR[280]                   
0x01BB (0x000376) 0x1411-       f:00012 d:  17 | A = A + 17 (0x0011)           
0x01BC (0x000378) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x01BD (0x00037A) 0x3108-       f:00030 d: 264 | A = (OR[264])                 
0x01BE (0x00037C) 0x0A09-       f:00005 d:   9 | A = A < 9 (0x0009)            
0x01BF (0x00037E) 0x1401-       f:00012 d:   1 | A = A + 1 (0x0001)            
0x01C0 (0x000380) 0x0C09-       f:00006 d:   9 | A = A >> 9 (0x0009)           
0x01C1 (0x000382) 0x3908-       f:00034 d: 264 | (OR[264]) = A                 
0x01C2 (0x000384) 0x2118-       f:00020 d: 280 | A = OR[280]                   
0x01C3 (0x000386) 0x1413-       f:00012 d:  19 | A = A + 19 (0x0013)           
0x01C4 (0x000388) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x01C5 (0x00038A) 0x3D08-       f:00036 d: 264 | (OR[264]) = (OR[264]) + 1     
0x01C6 (0x00038C) 0x0200-       f:00001 d:   0 | EXIT                          

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ Wait for busy to clear
0x01C7 (0x00038E) 0x1190-       f:00010 d: 400 | A = 400 (0x0190)              
0x01C8 (0x000390) 0x8405-       f:00102 d:   5 | P = P + 5 (0x01CD), A = 0     
0x01C9 (0x000392) 0x420F-       f:00041 d:  15 | C = 1, io 0017 (EXB) = BZ     
0x01CA (0x000394) 0x8003-       f:00100 d:   3 | P = P + 3 (0x01CD), C = 0     
0x01CB (0x000396) 0x1601-       f:00013 d:   1 | A = A - 1 (0x0001)            
0x01CC (0x000398) 0x7204-       f:00071 d:   4 | P = P - 4 (0x01C8)            
0x01CD (0x00039A) 0x8402-       f:00102 d:   2 | P = P + 2 (0x01CF), A = 0     
0x01CE (0x00039C) 0x7005-       f:00070 d:   5 | P = P + 5 (0x01D3)            
0x01CF (0x00039E) 0x1003-       f:00010 d:   3 | A = 3 (0x0003)                
0x01D0 (0x0003A0) 0x291E-       f:00024 d: 286 | OR[286] = A                   
0x01D1 (0x0003A2) 0x7E03-0x0236 f:00077 d:   3 | R = OR[3]+566 (0x0236)        @ Call XPRINTA or XPRINTB depending on the device address OR[286]: function code to pass on to driver
0x01D3 (0x0003A6) 0x0200-       f:00001 d:   0 | EXIT                          

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ Wait for device operation to complete?
0x01D4 (0x0003A8) 0x0400-       f:00002 d:   0 | I = 0                         
0x01D5 (0x0003AA) 0x0000-       f:00000 d:   0 | PASS                          
0x01D6 (0x0003AC) 0x1002-       f:00010 d:   2 | A = 2 (0x0002)                
0x01D7 (0x0003AE) 0xCE0F-       f:00147 d:  15 | io 0017 (EXB), fn007           | Set interrupt mode
0x01D8 (0x0003B0) 0x2118-       f:00020 d: 280 | A = OR[280]                   
0x01D9 (0x0003B2) 0x1409-       f:00012 d:   9 | A = A + 9 (0x0009)            
0x01DA (0x0003B4) 0x2913-       f:00024 d: 275 | OR[275] = A                   
0x01DB (0x0003B6) 0x211D-       f:00020 d: 285 | A = OR[285]                   
0x01DC (0x0003B8) 0x160F-       f:00013 d:  15 | A = A - 15 (0x000F)           
0x01DD (0x0003BA) 0x8402-       f:00102 d:   2 | P = P + 2 (0x01DF), A = 0     
0x01DE (0x0003BC) 0x7004-       f:00070 d:   4 | P = P + 4 (0x01E2)            
0x01DF (0x0003BE) 0x1032-       f:00010 d:  50 | A = 50 (0x0032)               
0x01E0 (0x0003C0) 0x2914-       f:00024 d: 276 | OR[276] = A                   
0x01E1 (0x0003C2) 0x7004-       f:00070 d:   4 | P = P + 4 (0x01E5)            
0x01E2 (0x0003C4) 0x1800-0x0258 f:00014 d:   0 | A = 600 (0x0258)              
0x01E4 (0x0003C8) 0x2914-       f:00024 d: 276 | OR[276] = A                   
@ Wait on device interrupt or timeout
0x01E5 (0x0003CA) 0x1009-       f:00010 d:   9 | A = 9 (0x0009)                
0x01E6 (0x0003CC) 0x2924-       f:00024 d: 292 | OR[292] = A                   
0x01E7 (0x0003CE) 0x2113-       f:00020 d: 275 | A = OR[275]                   
0x01E8 (0x0003D0) 0x2925-       f:00024 d: 293 | OR[293] = A                   
0x01E9 (0x0003D2) 0x2114-       f:00020 d: 276 | A = OR[276]                   
0x01EA (0x0003D4) 0x2926-       f:00024 d: 294 | OR[294] = A                   
0x01EB (0x0003D6) 0x1124-       f:00010 d: 292 | A = 292 (0x0124)              
0x01EC (0x0003D8) 0x5800-       f:00054 d:   0 | B = A                         
0x01ED (0x0003DA) 0x1800-0x1918 f:00014 d:   0 | A = 6424 (0x1918)             
0x01EF (0x0003DE) 0x7C09-       f:00076 d:   9 | R = OR[9]                     

0x01F0 (0x0003E0) 0x2006-       f:00020 d:   6 | A = OR[6]                     
0x01F1 (0x0003E2) 0x140B-       f:00012 d:  11 | A = A + 11 (0x000B)           
0x01F2 (0x0003E4) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x01F3 (0x0003E6) 0x3108-       f:00030 d: 264 | A = (OR[264])                 
0x01F4 (0x0003E8) 0x2913-       f:00024 d: 275 | OR[275] = A                   
0x01F5 (0x0003EA) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x01F6 (0x0003EC) 0xCE0F-       f:00147 d:  15 | io 0017 (EXB), fn007           | Set interrupt mode
0x01F7 (0x0003EE) 0x211D-       f:00020 d: 285 | A = OR[285]                   
0x01F8 (0x0003F0) 0xCA0F-       f:00145 d:  15 | io 0017 (EXB), fn005           | Load device address
0x01F9 (0x0003F2) 0x2118-       f:00020 d: 280 | A = OR[280]                   
0x01FA (0x0003F4) 0x1411-       f:00012 d:  17 | A = A + 17 (0x0011)           
0x01FB (0x0003F6) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x01FC (0x0003F8) 0x3108-       f:00030 d: 264 | A = (OR[264])                 
0x01FD (0x0003FA) 0x1A00-0xFF00 f:00015 d:   0 | A = A & 65280 (0xFF00)        
0x01FF (0x0003FE) 0x3908-       f:00034 d: 264 | (OR[264]) = A                 
0x0200 (0x000400) 0x2113-       f:00020 d: 275 | A = OR[275]                   
0x0201 (0x000402) 0x8602-       f:00103 d:   2 | P = P + 2 (0x0203), A # 0     
0x0202 (0x000404) 0x700D-       f:00070 d:  13 | P = P + 13 (0x020F)           
0x0203 (0x000406) 0x2118-       f:00020 d: 280 | A = OR[280]                   
0x0204 (0x000408) 0x1411-       f:00012 d:  17 | A = A + 17 (0x0011)           
0x0205 (0x00040A) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x0206 (0x00040C) 0x3108-       f:00030 d: 264 | A = (OR[264])                 
0x0207 (0x00040E) 0x0E01-       f:00007 d:   1 | A = A << 1 (0x0001)           
0x0208 (0x000410) 0x0A08-       f:00005 d:   8 | A = A < 8 (0x0008)            
0x0209 (0x000412) 0x1400-       f:00012 d:   0 | A = A + 0 (0x0000)            
0x020A (0x000414) 0x0C09-       f:00006 d:   9 | A = A >> 9 (0x0009)           
0x020B (0x000416) 0x3908-       f:00034 d: 264 | (OR[264]) = A                 
0x020C (0x000418) 0x1004-       f:00010 d:   4 | A = 4 (0x0004)                
0x020D (0x00041A) 0x291E-       f:00024 d: 286 | OR[286] = A                   
0x020E (0x00041C) 0x7422-       f:00072 d:  34 | R = P + 34 (0x0230)           
0x020F (0x00041E) 0x0200-       f:00001 d:   0 | EXIT                          

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ Check for error-code, return from overlay in case of an error
0x0210 (0x000420) 0x2118-       f:00020 d: 280 | A = OR[280]                   @ Get previous return value
0x0211 (0x000422) 0x140B-       f:00012 d:  11 | A = A + 11 (0x000B)           
0x0212 (0x000424) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x0213 (0x000426) 0x3108-       f:00030 d: 264 | A = (OR[264])                 
0x0214 (0x000428) 0x0808-       f:00004 d:   8 | A = A > 8 (0x0008)            
0x0215 (0x00042A) 0x291C-       f:00024 d: 284 | OR[284] = A                   
0x0216 (0x00042C) 0x2118-       f:00020 d: 280 | A = OR[280]                   @ Clear previous error code
0x0217 (0x00042E) 0x140B-       f:00012 d:  11 | A = A + 11 (0x000B)           
0x0218 (0x000430) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x0219 (0x000432) 0x3108-       f:00030 d: 264 | A = (OR[264])                 
0x021A (0x000434) 0x0E01-       f:00007 d:   1 | A = A << 1 (0x0001)           
0x021B (0x000436) 0x0A08-       f:00005 d:   8 | A = A < 8 (0x0008)            
0x021C (0x000438) 0x1400-       f:00012 d:   0 | A = A + 0 (0x0000)            
0x021D (0x00043A) 0x0C09-       f:00006 d:   9 | A = A >> 9 (0x0009)           
0x021E (0x00043C) 0x3908-       f:00034 d: 264 | (OR[264]) = A                 
0x021F (0x00043E) 0x211C-       f:00020 d: 284 | A = OR[284]                   @ Overwrite return value 4 with return value 0
0x0220 (0x000440) 0x1604-       f:00013 d:   4 | A = A - 4 (0x0004)            
0x0221 (0x000442) 0x8402-       f:00102 d:   2 | P = P + 2 (0x0223), A = 0     
0x0222 (0x000444) 0x7004-       f:00070 d:   4 | P = P + 4 (0x0226)            
0x0223 (0x000446) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x0224 (0x000448) 0x291C-       f:00024 d: 284 | OR[284] = A                   
0x0225 (0x00044A) 0x7005-       f:00070 d:   5 | P = P + 5 (0x022A)            
0x0226 (0x00044C) 0x211C-       f:00020 d: 284 | A = OR[284]                   
0x0227 (0x00044E) 0x8602-       f:00103 d:   2 | P = P + 2 (0x0229), A # 0     
0x0228 (0x000450) 0x7002-       f:00070 d:   2 | P = P + 2 (0x022A)            
0x0229 (0x000452) 0x73BC-       f:00071 d: 444 | P = P - 444 (0x006D)          
0x022A (0x000454) 0x0200-       f:00001 d:   0 | EXIT                          

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ Get RegA from device
@@ Output:
@@    OR[290]: RegA
0x022B (0x000456) 0xC20F-       f:00141 d:  15 | io 0017 (EXB), fn001           | Request data input from A register (DIA)
0x022C (0x000458) 0x7665-       f:00073 d: 101 | R = P - 101 (0x01C7)          @ Wait for busy to clear
0x022D (0x00045A) 0xD00F-       f:00150 d:  15 | io 0017 (EXB), fn010           | Read data bus status
0x022E (0x00045C) 0x2922-       f:00024 d: 290 | OR[290] = A                   
0x022F (0x00045E) 0x0200-       f:00001 d:   0 | EXIT                          

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ Call XPRINTA or XPRINTB depending on the device address
@@ Input:
@@    OR[286]: function code to pass on to driver
0x0230 (0x000460) 0x2118-       f:00020 d: 280 | A = OR[280]                   
0x0231 (0x000462) 0x1414-       f:00012 d:  20 | A = A + 20 (0x0014)           
0x0232 (0x000464) 0x2908-       f:00024 d: 264 | OR[264] = A                   
0x0233 (0x000466) 0x3108-       f:00030 d: 264 | A = (OR[264])                 
0x0234 (0x000468) 0x1A00-0xFF00 f:00015 d:   0 | A = A & 65280 (0xFF00)        
0x0236 (0x00046C) 0x3908-       f:00034 d: 264 | (OR[264]) = A                 
0x0237 (0x00046E) 0x211D-       f:00020 d: 285 | A = OR[285]                   
0x0238 (0x000470) 0x160F-       f:00013 d:  15 | A = A - 15 (0x000F)           
0x0239 (0x000472) 0x8402-       f:00102 d:   2 | P = P + 2 (0x023B), A = 0     
0x023A (0x000474) 0x7005-       f:00070 d:   5 | P = P + 5 (0x023F)            
@ Call XPRNTA - Gould/Calcomp printer handler
0x023B (0x000476) 0x1800-0x00AB f:00014 d:   0 | A = 171 (0x00AB)              
0x023D (0x00047A) 0x2923-       f:00024 d: 291 | OR[291] = A                   
0x023E (0x00047C) 0x7004-       f:00070 d:   4 | P = P + 4 (0x0242)            
@ Call XPRNTB - Versatec printer handler
0x023F (0x00047E) 0x1800-0x00AC f:00014 d:   0 | A = 172 (0x00AC)              
0x0241 (0x000482) 0x2923-       f:00024 d: 291 | OR[291] = A                   
0x0242 (0x000484) 0x1028-       f:00010 d:  40 | A = 40 (0x0028)               
0x0243 (0x000486) 0x2924-       f:00024 d: 292 | OR[292] = A                   
0x0244 (0x000488) 0x2123-       f:00020 d: 291 | A = OR[291]                   
0x0245 (0x00048A) 0x2925-       f:00024 d: 293 | OR[293] = A                   
0x0246 (0x00048C) 0x2118-       f:00020 d: 280 | A = OR[280]                   
0x0247 (0x00048E) 0x2926-       f:00024 d: 294 | OR[294] = A                   
0x0248 (0x000490) 0x211E-       f:00020 d: 286 | A = OR[286]                   
0x0249 (0x000492) 0x2927-       f:00024 d: 295 | OR[295] = A                   
0x024A (0x000494) 0x1124-       f:00010 d: 292 | A = 292 (0x0124)              
0x024B (0x000496) 0x5800-       f:00054 d:   0 | B = A                         
0x024C (0x000498) 0x1800-0x1918 f:00014 d:   0 | A = 6424 (0x1918)             
0x024E (0x00049C) 0x7C09-       f:00076 d:   9 | R = OR[9]                     

0x024F (0x00049E) 0x291C-       f:00024 d: 284 | OR[284] = A                   
0x0250 (0x0004A0) 0x211C-       f:00020 d: 284 | A = OR[284]                   
0x0251 (0x0004A2) 0x8602-       f:00103 d:   2 | P = P + 2 (0x0253), A # 0     
0x0252 (0x0004A4) 0x7002-       f:00070 d:   2 | P = P + 2 (0x0254)            
0x0253 (0x0004A6) 0x73E6-       f:00071 d: 486 | P = P - 486 (0x006D)          
0x0254 (0x0004A8) 0x1000-       f:00010 d:   0 | A = 0 (0x0000)                
0x0255 (0x0004AA) 0xCE0F-       f:00147 d:  15 | io 0017 (EXB), fn007           | Set interrupt mode
0x0256 (0x0004AC) 0x211D-       f:00020 d: 285 | A = OR[285]                   
0x0257 (0x0004AE) 0xCA0F-       f:00145 d:  15 | io 0017 (EXB), fn005           | Load device address
0x0258 (0x0004B0) 0x0200-       f:00001 d:   0 | EXIT                          

0x0259 (0x0004B2) 0x0000-       f:00000 d:   0 | PASS                          
0x025A (0x0004B4) 0x0000-       f:00000 d:   0 | PASS                          
0x025B (0x0004B6) 0x0000-       f:00000 d:   0 | PASS                          
